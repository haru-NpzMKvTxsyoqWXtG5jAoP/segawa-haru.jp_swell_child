@charset "UTF-8";
/*
    Template: swell
    Theme Name: SWELL CHILD
    Theme URI: https://swell-theme.com/
    Description: SWELLの子テーマ
    Version: 1.0.0
    Author: LOOS WEB STUDIO
    Author URI: https://loos-web-studio.com/

    License: GNU General Public License
    License URI: http://www.gnu.org/licenses/gpl.html
*/

:root {
  --card-image-padding: clamp(25px, 1.6vw, 50px);
  /* ギャラリー関連のCSS変数を定義 */
  --gallery-padding: clamp(15px, 4vw, 50px);
  --gallery-gutter: 15px; /* JSのgutterと値を合わせる */
  --gallery-columns-pc: 3;
  --gallery-columns-tablet: 2;
  --gallery-columns-mobile: 1; /* スマホは1列 */

  --card-grid-gap: 1px; /* 1px から 1px に変更 */
  --card-grid-min-item-width: 375px;          /* カードの最小幅 */
  /* --card-item-height: 450px; */                 /* カードの"最小"高さとして使用 ← コメントアウト */
  --card-border-color: #000000;               /* カードの通常時の枠線色 */
  --card-border-color-hover: #04C58A;           /* カードのホバー時の枠線色 */
  --card-bg-color: #fff;                      /* カードの背景色 */
  --card-border-radius: 10px;                 /* カードの角丸 */
  /* --card-image-max-height: 350px; */            /* カード画像の最大高さ ← コメントアウト */
  /* --card-image-display-height: 280px; */ /* カード内画像の目標の高さを指定 ← コメントアウト */
  --card-text-max-height: calc(1.5em * 3);    /* カード内テキストの最大高さ */
  --arrow-size: 24px;                         /* 矢印のサイズ */
  --arrow-color: #333;                        /* 矢印の色 */
  --card-grid-max-columns: 4;                 /* 最大列数を4に指定 */
  --card-aspect-ratio: 1 / 1.05;             /* カードのアスペクト比 (1.15から変更) */
  /* サイト全体に関わるCSS変数を定義 */
  --base-font-family: "Helvetica Neue", Arial, "Hiragino Kaku Gothic ProN", "Hiragino Sans", Meiryo, sans-serif;
  --brand-color: #333; /* ブランドカラーを定義 */
  --link-color: var(--brand-color); /* リンク色をブランドカラーに設定 */
  --content-width: 1200px; /* コンテンツの最大幅 */
  --sidebar-width: 300px; /* サイドバーの幅 */
  --header-height: 80px; /* ヘッダーの高さ */
  --footer-height: 60px; /* フッターの高さ */
}

/* ===========================================================
   左端に寄せるセクション：デスクトップ時のみ適用
=========================================================== */
.wp-block-group-edge-left-section {
  max-width: none !important;   /* SWELLテーマの幅制限を解除 */
  width: 100%;
  padding-left: 8px;            /* 完全ベタ付けではなく、僅かに余白を残す */
}

/* SERVICE見出しと説明文の隙間（必要なブロックに class="edge-left-section"） */
.edge-left-section {
  margin-bottom: -0.35em !important;
}

/* モバイル向け：左右に読みやすい余白を確保
=========================================================== */
@media (max-width: 599px) {
  .wp-block-group-edge-left-section {
    padding-left: 16px;
  }
}
/* ===========================================================
   カード一覧
=========================================================== */
div.wp-block-group.card-grid {
  /* ここにカスタムプロパティを定義 */
  --card-grid-gap: 1px; /* 1px から 1px に変更 */
  --card-grid-min-item-width: 375px;          /* カードの最小幅 */
  /* --card-item-height: 450px; */                 /* カードの"最小"高さとして使用 ← コメントアウト */
  --card-border-color: #000000;               /* カードの通常時の枠線色 */
  --card-border-color-hover: #04C58A;           /* カードのホバー時の枠線色 */
  --card-bg-color: #fff;                      /* カードの背景色 */
  --card-border-radius: 10px;                 /* カードの角丸 */
  --card-image-padding: clamp(25px, 1.6vw, 50px); /* 削除されてしまっていたので復活 */
  /* --card-image-max-height: 350px; */            /* カード画像の最大高さ ← コメントアウト */
  /* --card-image-display-height: 280px; */ /* カード内画像の目標の高さを指定 ← コメントアウト */
  --card-text-max-height: calc(1.5em * 3);    /* カード内テキストの最大高さ */
  --arrow-size: 24px;                         /* 矢印のサイズ */
  --arrow-color: #333;                        /* 矢印の色 */
  --card-grid-max-columns: 4;                 /* 最大列数を4に指定 */
  --card-aspect-ratio: 1 / 1.05;             /* カードのアスペクト比 (1.15から変更) */

  /* ↓ここから下は、今の .card-grid のスタイル */
  display: grid;
  gap: var(--card-grid-gap); /* カスタムプロパティを使用 */
  /* 最大4列に制限しつつ、レスポンシブに列数を調整 */
  grid-template-columns: repeat(
    auto-fit, 
    minmax(
      max(
        var(--card-grid-min-item-width), 
        calc((100% - 100px - (var(--card-grid-max-columns) - 1) * var(--card-grid-gap)) / var(--card-grid-max-columns))
      ), 
      1fr
    )
  );
  padding-left: clamp(15px, 4vw, 50px);  /* 左側の余白をclampで動的に */
  padding-right: clamp(15px, 4vw, 50px); /* 右側の余白をclampで動的に */
  box-sizing: border-box; /* パディングを幅の内側に含めるため */
}

/* ===========================================================
   カード本体
=========================================================== */
.card-item {
  position: relative; /* 子要素のabsolute指定の基準にする */
  /* height: var(--card-item-height); */ /* 通常は固定高さ ← 削除 */
  aspect-ratio: var(--card-aspect-ratio); /* アスペクト比を指定 */
  min-width: var(--card-grid-min-item-width); /* カードの最小幅 */
  /* min-height: var(--card-item-height); */  /* 最小高さ保証を削除 */
  overflow: hidden; /* はみ出た内容を隠す */
  border: none; /* 枠線を削除 */
  border-radius: var(--card-border-radius); /* 角丸 (10px) */
  background-color: var(--card-bg-color); /* 背景色 (白) */
  display: flex; /* 内部要素の配置にflexboxを使用 */
  flex-direction: column; /* 子要素を縦方向に並べる */
  transition: transform 0.15s ease-out; /* transformのアニメーション速度を0.15秒に短縮 */
}

.card-item:hover {
  /* background-color: var(--card-border-color-hover); */ /* ホバー時背景色を緑に ← コメントアウト */
  /* color: #FFFFFF; */ /* ホバー時文字色を白に (復活させる) ← コメントアウト */
  transform: scale(0.95); /* ホバー時にカードを少し縮小する */
}

/* ===========================================================
   カード内の要素
=========================================================== */

/* カード内画像 */
.card-item img {
  pointer-events: none; /* 画像のクリックイベント無効化 */
  width: calc(100% - (var(--card-image-padding) * 2)); /* ★ 余白分を引く */
  height: calc(100% - (var(--card-image-padding) * 2)); /* ★ 余白分を引く */
  object-fit: cover; /* アスペクト比を維持してコンテナに収める */
  object-position: center; /* 中央揃え */
  display: block;
  margin: var(--card-image-padding); /* ★ 余白を作る */
  border-radius: calc(var(--card-border-radius) - 5px); /* ★ カードより5px小さい角丸 */
  box-sizing: border-box; /* ★ 忘れずに復活 */
  flex-shrink: 0; /* flexアイテムとして縮まないようにする */
}

/* カード内見出し (h3) */
.card-item h3 {
  margin: 0.5rem 1.25rem 0.3rem; /* 上下左右のマージン */
  font-size: 1.35rem;             /* フォントサイズ */
  font-weight: 700;               /* フォントの太さ */
  line-height: 1.4;               /* 行の高さ */
  color: #333333;                 /* 通常時の文字色 (ホバーで白になるので、通常時も定義) */
  transition: color .3s;          /* 文字色の変化をアニメーション */
}

/* カード内テキスト (p) */
.card-item p {
  font-size: 13px;            /* フォントサイズを13pxに指定 */
  padding-top: 0;
  padding-right: 0.8rem;      /* 内側の右パディング */
  padding-bottom: 0.5rem;
  padding-left: 0.8rem;       /* 内側の左パディング */
  box-sizing: border-box;
  margin-top: 0;
  margin-right: 0.5rem;         /* 外側の右余白を0.5remに変更 */
  margin-bottom: 0.5rem;      /* 下にも少しマージンを（flex-growとの兼ね合いで調整）に戻す */
  margin-left: 0.5rem;          /* 外側の左余白を0.5remに変更 */
  line-height: 1.6;           /* 行の高さ */
  flex-grow: 1;               /* 残りのスペースを埋めるように伸びる */
  max-height: var(--card-text-max-height); /* テキストエリアの最大高さを制限 */
  text-align: justify;        /* 均等割り付けを試す */
  transition: color .3s; /* 文字色の変化をアニメーション */
}

/* ===========================================================
   カード内インラインSVG矢印
=========================================================== */
.card-item .arrow svg { /* figureタグやdivなど、SVGをラップしてる要素の中のSVGタグ自体 */
  width: var(--arrow-size);  /* カスタムプロパティでサイズ指定 (今は24pxのはず) */
  height: var(--arrow-size); /* カスタムプロパティでサイズ指定 */
  position: absolute; /* position:absolute を復活 */
  right: 1rem;        /* right: 1rem を復活 */
  bottom: 1rem;       /* bottom: 1rem を復活 */
  transition: transform 0.3s ease-out; /* ホバー時の移動アニメーション */
}

.card-item:hover .arrow svg {
  transform: translateX(5px); /* ホバー時に右に5px動かす */
}

.card-item .arrow svg path {
  stroke: var(--arrow-color); /* 線をカスタムプロパティの色に (今は#333のはず) ← コメントアウト解除 */
  fill: var(--arrow-color);   /* 念のためfillも同じ色に (SVGの作りによる) ← コメントアウト解除 */
  transition: stroke 0.3s, fill 0.3s; /* ホバー時の色変化をアニメーション */
}

.card-item:hover svg path {
  /* stroke: #FFFFFF; */ /* ホバー時は白に ← コメントアウトのまま */
  /* fill: #FFFFFF; */   /* ホバー時は白に ← コメントアウトのまま */
}

.card-item:hover p {
  /* color: #FFFFFF; */ /* ホバー時文字色を白に ← コメントアウトのまま */
}

/* ===========================================================
   全幅グループ内の制約付きインナーコンテナの幅制限を解除
   （SVGタイトルの幅制限解除のため）
=========================================================== */
.wp-block-group.alignfull > .wp-block-group__inner-container.is-layout-constrained {
  max-width: none !important; /* SWELLの最大幅制限を解除 */
  padding-left: 0 !important;   /* SWELLが付与する可能性のある左右paddingも解除 */
  padding-right: 0 !important;
}

/* ===========================================================
   メイソンリー：基本スタイル
=========================================================== */
.masonry-gallery {
  position: relative; /* これはMasonry.jsのために必須 */
  box-sizing: border-box; /* 左右のpaddingを幅の内側に含めるため */
  padding-left: 0;  /* 左右の余白（一旦、固定値で） */
  padding-right: 0;
  margin-left: auto; /* 全幅ブロックの中での中央寄せ（念のため） */
  margin-right: auto;
}

/* 幅計算の基準になる、目には見えないダミー要素 */
.masonry-gallery .grid-sizer {
  box-sizing: border-box;
}

/* 各ギャラリーアイテムの基本設定 */
.masonry-gallery .masonry-gallery-item {
  margin-bottom: 15px; /* アイテムの縦の隙間 */
  box-sizing: border-box;
  background-color: rgba(200, 200, 200, 0.2); /* アイテムの範囲が分かるように、仮でうっすら背景色 */
  overflow: hidden; /* 中身がはみ出さないように */
}

/* アイテム内の画像 */
.masonry-gallery .masonry-gallery-item img {
  display: block;
  width: 100%;
  height: auto;
}

/* --- ここからが、レスポンシブな幅の指定（一番シンプルな形） --- */

/* スマホ (1列) */
@media (max-width: 767px) {
  .masonry-gallery .grid-sizer,
  .masonry-gallery .masonry-gallery-item {
    width: 100%;
  }
}

/* タブレット (2列) */
@media (min-width: 768px) and (max-width: 1023px) {
  .masonry-gallery .grid-sizer,
  .masonry-gallery .masonry-gallery-item {
    /* (100% - 隙間1つ) / 2列 */
    width: calc((100% - 15px) / 2);
  }
}

/* PC (3列) */
@media (min-width: 1024px) {
  .masonry-gallery .grid-sizer,
  .masonry-gallery .masonry-gallery-item {
    /* (100% - 隙間2つ) / 3列 */
    width: calc((100% - 2 * 15px) / 3);
  }
}

/* ===========================================================
   メイソンリー：矢印 (基本スタイル & h6-arrowの外のデフォルト)
   アイテム右下に絶対配置されるSVG矢印の基本的なスタイル。
   .h6-arrow内のSVGでは、一部のスタイルが下の専用ルールで上書きされる。
=========================================================== */
.masonry-gallery-item svg { /* SVGが直接アイテム内にある場合 */
  width: 24px;  /* カードの矢印サイズに合わせる (仮) */
  height: 24px; /* カードの矢印サイズに合わせる (仮) */
  position: absolute;
  right: 1rem;
  bottom: 0.5rem; /* 1rem から 0.5rem に変更して、より上に配置 */
  transition: transform 0.3s ease-out;
  /* fill: #04C58A;  ホバー時は緑色に  <- この行を削除 (SVGコンテナへの不適切なfill指定) */
}

.masonry-gallery-item:hover svg {
  transform: translateX(5px); /* ホバー時に右に5px動かす */
}

.masonry-gallery-item svg path {
  /* stroke: #333; */ /* 通常時の矢印の色 (仮) ← コメントアウト */
  /* fill: #333; */   /* 通常時の矢印の色 (仮) ← コメントアウト */
  transition: stroke 0.3s, fill 0.3s;
}

.masonry-gallery-item:hover svg path {
  /* stroke: #04C58A; */ /* ホバー時は緑色に ← コメントアウト */
  /* fill: #04C58A; */   /* ホバー時は緑色に (復活) ← コメントアウト */
  /* ホバー時のtransformやpathの色指定は、既に .masonry-gallery-item:hover svg (path) で
     共通に定義されているため、.h6-arrow svg 用の個別指定は基本的に不要。
     もし .h6-arrow 内のSVGだけホバーエフェクトを変えたい場合に、ここに追加する。

     現在の .masonry-gallery-item:hover .h6-arrow svg (コンテナのtransform) や path (色) のスタイルは、
     基本スタイルのホバーと全く同じ効果なので、理論上は省略可能だが、
     意図を明確にするため、または将来的な個別変更のために残しておくのもアリ。 */
}

/* ===========================================================
   harusegawa-title-svg (インラインSVGタイトル) スタイル
=========================================================== */
.harusegawa-title-svg {
  padding-left: clamp(15px, 4vw, 50px); /* カードグリッドと同じclamp余白に変更 */
  padding-right: clamp(15px, 4vw, 50px); /* カードグリッドと同じclamp余白に変更 */
  box-sizing: border-box;
  width: 100% !important; /* インラインスタイルの width を上書き */
  height: auto !important; /* インラインスタイルの height も上書き */
}

.harusegawa-title-svg svg {
  width: 100%; /* 上記パディングの内側で、幅100%に広がる */
  height: auto;
  display: block;
  fill: #FFFFFF; /* SVGの文字色を白に */
  margin-top: 0.2em; /* 上の余白 (調整用) */
  margin-bottom: 0.05em; /* 下のキャプションとの余白 (調整用) */
}

/* ===========================================================
   harusegawa-title-caption (H2キャプション) スタイル
=========================================================== */
.harusegawa-title-caption {
  font-size: 18px !important; /* !important を追加して強制 */
  font-weight: normal;
  color: #FFFFFF;      /* 文字色を白に */
  text-align: center;
  margin-top: 0;     /* SVGタイトルとの間の余白はSVG側で調整 */
  margin-bottom: 1em;
  /* キャプションの左右パディングはSVGタイトルとは別に調整 */
  padding-left: calc(50px + 5%); /* SVGの50px + さらに5%内側 */
  padding-right: calc(50px + 5%);
  box-sizing: border-box; /* パディングを幅の内側に含める */
  line-height: 1.6;
}

/* ===========================================================
   超広画面向けのカードスタイル (例: 2560px以上)
=========================================================== */
@media (min-width: 99999px) { /* ← 条件を事実上無効化 (元は1800px) */
  .card-item {
    height: auto; /* 高さを自動に */
    aspect-ratio: var(--card-aspect-ratio); /* カードのアスペクト比を維持 */
    min-height: var(--card-item-height); /* 最小高さは維持 */
  }

  .card-item img {
    width: calc(100% - (var(--card-image-padding) * 2)); /* 幅は親に合わせる */
    height: auto;                                     /* 高さはautoに */
    aspect-ratio: calc((var(--card-grid-min-item-width) - var(--card-image-padding) * 2) / var(--card-image-display-height)); /* 計算したアスペクト比を設定 (345 / 280) */
    object-fit: cover;                                /* 表示方法 */
    max-height: none;                                 /* 高さの最大制限は解除 */
  }

  /* テキストエリアの調整 */
  .card-item p {
    flex-grow: 0; /* テキストエリアが不必要に伸びるのを防ぐ */
    /* max-height: none; */ /* 通常時の3行制限を超広画面では解除（必要なら）*/
    /* height: auto; */ /* 内容に応じた高さ */
    padding-bottom: 3rem; /* 矢印とのスペースを確保 */
  }
}
